# numpy.ndarray.reshape(새로운 shape, 순서='C')
# ndarray 오브젝트를 새로운 shape 규정에 따라 구조를 바꿔줌
# 예)
# >>> a = np.arange(6)
# >>> a
# array([0, 1, 2, 3, 4, 5])
# >>> a = a.reshape((2, 3))
# >>> a
# array([[0, 1]
#        [2, 3]
#        [4, 5]])

# 만약 입력에 -1가 있다면 해당 오브젝트의 길이와 남아있는 차원의 개수에 따라 결정됨
# pts = pts.reshape((-1, 1, 2))
# pts를 3차원으로 만들어줌
# 가장 안쪽 차원의 벡터 = 2차 벡터
# [10, 5] [20, 30] [70, 20] [50, 10]
# 두번째 차원의 벡터 = 1차 벡터
# [[10, 5]] [[20, 30]] [[70, 20]] [[50, 10]]
# 마지막 차원의 벡터는 남아있는 개수만큼 알아서
# 마지막으로 묶을 수 있는 방법은 4개 하나로 모으는 거니까 4가 됨
# [[[10, 5]] [[20, 30]] [[70, 20]] [[50, 10]]]
# 4x1x2 행렬
