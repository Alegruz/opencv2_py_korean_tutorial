import numpy as np
import cv2

# 배울 것
# numpy.zeros() -> 원소가 전부 0인 행렬 생성
# cv2.line() -> 선 그림
# cv2.rectangle() -> 직사각형 그림
# cv2.circle() -> 원 그림
# cv2.ellipse() -> 타원 그림

# 검은 사진 생성
# np.zeros((1차원 원소 개수, 2차원 원소 개수, ..., n차원 원소 개수), 원소타입)
# 이를 통해 모든 원소의 값이 0인 512x512x3 짜리 3차원 행렬을 만들 수 있음
# 원소타입은 np.uint16 등 다양함.
img = np.zeros((512, 512, 3), np.uint8)

# 선 그리기
# cv2.line(사진, 좌표1, 좌표2, RGB색, [굵기=1, [선종류, [시프트=0]]])
# 뒤에 선종류랑 시프트는 무시하셈 나도 뭔지 모름 ㅎㅎ
img = cv2.line(img, (0, 0), (511, 511), (255, 0, 0), 5)
# (0, 0)에서 (511, 511)을 잇는 색깔 (255, 0, 0) == 파란색인 5 px 짜리 굵기의 선

# 직사각형 그리기
# cv2.rectangle(사진, 좌표1(좌상단), 좌표2(우하단), RGB색, [굵기=1, [선종류, [시프트=0]]])
img = cv2.rectangle(img, (384, 0), (510, 128), (0, 255, 0), 3)
# (0, 255, 0) == 초록색

# 원 그리기
# cv2.circle(사진, 중심좌표, 반지름, RGB색, [굵기=1, [선종류, [시프트=0]]])
img = cv2.circle(img, (447, 63), 63, (0, 0, 255), -1)
# (0, 0, 255) == 빨간색
# 굵기가 -1이면 내부를 꽉 채움

# 타원 그리기
# cv2.ellipse(사진, 중심좌표, 축 길이(긴반지름, 짧은반지름), 각도(반시계방향), 호 시작각도(시계방향), 호 종료각도(시계방향), RGB색, [굵기=1, [선종류, [시프트=0]]])
img = cv2.ellipse(img, (256, 256), (100, 50), 0, 0, 180, 255, -1)
# 중심이 (256, 256)이고, 긴반지름이 100, 짧은반지름이 50이며, 장축과 x축의 각도가 0인 타원
# 호의 각도가 0에서 180까지이므로 타원의 아랫절반
# 255 == (255, 0, 0) 즉 파란색

cv2.imshow("geometry", img)

if (cv2.waitKey(0) & 0xFF == 'q'):
    cv2.destroyAllWindows()